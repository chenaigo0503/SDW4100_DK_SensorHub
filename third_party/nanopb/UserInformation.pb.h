/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Sat Mar 27 16:48:59 2021. */

#ifndef PB_USERINFORMATION_PB_H_INCLUDED
#define PB_USERINFORMATION_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _DateTimeInformation {
    uint32_t year;
    uint32_t month;
    uint32_t day;
    uint32_t hour;
    uint32_t minute;
    uint32_t second;
/* @@protoc_insertion_point(struct:DateTimeInformation) */
} DateTimeInformation;

typedef struct _GNSSInformation {
    double latitude;
    double longitude;
/* @@protoc_insertion_point(struct:GNSSInformation) */
} GNSSInformation;

/* Default values for struct fields */

/* Initializer values for message structs */
#define GNSSInformation_init_default             {0, 0}
#define DateTimeInformation_init_default         {0, 0, 0, 0, 0, 0}
#define GNSSInformation_init_zero                {0, 0}
#define DateTimeInformation_init_zero            {0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define DateTimeInformation_year_tag             1
#define DateTimeInformation_month_tag            2
#define DateTimeInformation_day_tag              3
#define DateTimeInformation_hour_tag             4
#define DateTimeInformation_minute_tag           5
#define DateTimeInformation_second_tag           6
#define GNSSInformation_latitude_tag             1
#define GNSSInformation_longitude_tag            2

/* Struct field encoding specification for nanopb */
extern const pb_field_t GNSSInformation_fields[3];
extern const pb_field_t DateTimeInformation_fields[7];

/* Maximum encoded size of messages (where known) */
#define GNSSInformation_size                     18
#define DateTimeInformation_size                 36

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define USERINFORMATION_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
